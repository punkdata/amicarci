//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//
// The supplied json has fields with names that are not valid in apex
// and so can only be parsed with explicitly generated code, this option
// was auto selected for you.

public class AMICAR_simulacionformalizaWSJSON {

    public class CustomerRequestData {
        public String academicLevel {get;set;} 
        public String livingHousehold {get;set;} 
        public String maritalRegime {get;set;} 
        public String maritalStatus {get;set;} 
        public String profession {get;set;} 

        public CustomerRequestData(JSONParser parser) {
            while (parser.nextToken() != System.JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                        if (text == 'academicLevel') {
                            academicLevel = parser.getText();
                        } else if (text == 'livingHousehold') {
                            livingHousehold = parser.getText();
                        } else if (text == 'maritalRegime') {
                            maritalRegime = parser.getText();
                        } else if (text == 'maritalStatus') {
                            maritalStatus = parser.getText();
                        } else if (text == 'profession') {
                            profession = parser.getText();
                        } else {
                            System.debug(LoggingLevel.WARN, 'CustomerRequestData consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }
    
    public class Customer {
        public String address {get;set;} 
        public String dob {get;set;} 
        public String documentSerialNumber {get;set;} 
        public String email {get;set;} 
        public String gender {get;set;} 
        public Integer geographicDataId {get;set;} 
        public Integer identificationTypeId {get;set;} 
        public String identificationValue {get;set;} 
        public String lastName {get;set;} 
        public String motherLastName {get;set;} 
        public String name {get;set;} 
        public Integer nationality {get;set;} 
        public String phone {get;set;} 

        public Customer(JSONParser parser) {
            while (parser.nextToken() != System.JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                        if (text == 'address') {
                            address = parser.getText();
                        } else if (text == 'dob') {
                            dob = parser.getText();
                        } else if (text == 'documentSerialNumber') {
                            documentSerialNumber = parser.getText();
                        } else if (text == 'email') {
                            email = parser.getText();
                        } else if (text == 'gender') {
                            gender = parser.getText();
                        } else if (text == 'geographicDataId') {
                            geographicDataId = parser.getIntegerValue();
                        } else if (text == 'identificationTypeId') {
                            identificationTypeId = parser.getIntegerValue();
                        } else if (text == 'identificationValue') {
                            identificationValue = parser.getText();
                        } else if (text == 'lastName') {
                            lastName = parser.getText();
                        } else if (text == 'motherLastName') {
                            motherLastName = parser.getText();
                        } else if (text == 'name') {
                            name = parser.getText();
                        } else if (text == 'nationality') {
                            nationality = parser.getIntegerValue();
                        } else if (text == 'phone') {
                            phone = parser.getText();
                        } else {
                            System.debug(LoggingLevel.WARN, 'Customer consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }
    
    public class Expenses {
        public Integer mortgageCost {get;set;} 
        public Integer otherFixedExpenses {get;set;} 

        public Expenses(JSONParser parser) {
            while (parser.nextToken() != System.JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                        if (text == 'mortgageCost') {
                            mortgageCost = parser.getIntegerValue();
                        } else if (text == 'otherFixedExpenses') {
                            otherFixedExpenses = parser.getIntegerValue();
                        } else {
                            System.debug(LoggingLevel.WARN, 'Expenses consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }
    
    public class Income {
        public String descriptionForOtherIncome {get;set;} 
        public Integer honorarium {get;set;} 
        public Integer otherIncome {get;set;} 
        public Integer pensionSalary {get;set;} 
        public Integer rentalIncome {get;set;} 
        public Integer retirementSalary {get;set;} 
        public Integer salary {get;set;} 

        public Income(JSONParser parser) {
            while (parser.nextToken() != System.JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                        if (text == 'descriptionForOtherIncome') {
                            descriptionForOtherIncome = parser.getText();
                        } else if (text == 'honorarium') {
                            honorarium = parser.getIntegerValue();
                        } else if (text == 'otherIncome') {
                            otherIncome = parser.getIntegerValue();
                        } else if (text == 'pensionSalary') {
                            pensionSalary = parser.getIntegerValue();
                        } else if (text == 'rentalIncome') {
                            rentalIncome = parser.getIntegerValue();
                        } else if (text == 'retirementSalary') {
                            retirementSalary = parser.getIntegerValue();
                        } else if (text == 'salary') {
                            salary = parser.getIntegerValue();
                        } else {
                            System.debug(LoggingLevel.WARN, 'Income consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }
    
    public class PersonalReferences {
        public String address {get;set;} 
        public String name {get;set;} 
        public String phone {get;set;} 
        public String type_Z {get;set;} // in json: type

        public PersonalReferences(JSONParser parser) {
            while (parser.nextToken() != System.JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                        if (text == 'address') {
                            address = parser.getText();
                        } else if (text == 'name') {
                            name = parser.getText();
                        } else if (text == 'phone') {
                            phone = parser.getText();
                        } else if (text == 'type') {
                            type_Z = parser.getText();
                        } else {
                            System.debug(LoggingLevel.WARN, 'PersonalReferences consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }
    
    public class OtherIncome {
        public Integer code158 {get;set;} 
        public Integer code170 {get;set;} 
        public Integer code18 {get;set;} 
        public Integer code25 {get;set;} 
        public Integer code305 {get;set;} 
        public Integer code36 {get;set;} 
        public Integer code461 {get;set;} 
        public Integer code545 {get;set;} 
        public Integer code611 {get;set;} 
        public Integer code628 {get;set;} 
        public Integer code636 {get;set;} 
        public Integer folioNumber {get;set;} 
        public Integer year {get;set;} 

        public OtherIncome(JSONParser parser) {
            while (parser.nextToken() != System.JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                        if (text == 'code158') {
                            code158 = parser.getIntegerValue();
                        } else if (text == 'code170') {
                            code170 = parser.getIntegerValue();
                        } else if (text == 'code18') {
                            code18 = parser.getIntegerValue();
                        } else if (text == 'code25') {
                            code25 = parser.getIntegerValue();
                        } else if (text == 'code305') {
                            code305 = parser.getIntegerValue();
                        } else if (text == 'code36') {
                            code36 = parser.getIntegerValue();
                        } else if (text == 'code461') {
                            code461 = parser.getIntegerValue();
                        } else if (text == 'code545') {
                            code545 = parser.getIntegerValue();
                        } else if (text == 'code611') {
                            code611 = parser.getIntegerValue();
                        } else if (text == 'code628') {
                            code628 = parser.getIntegerValue();
                        } else if (text == 'code636') {
                            code636 = parser.getIntegerValue();
                        } else if (text == 'folioNumber') {
                            folioNumber = parser.getIntegerValue();
                        } else if (text == 'year') {
                            year = parser.getIntegerValue();
                        } else {
                            System.debug(LoggingLevel.WARN, 'OtherIncome consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }
    
    public class Heritage {
        public String description {get;set;} 
        public String financing {get;set;} 
        public Integer saleValue {get;set;} 
        public Boolean stillPaying {get;set;} 
        public String type_Z {get;set;} // in json: type

        public Heritage(JSONParser parser) {
            while (parser.nextToken() != System.JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                        if (text == 'description') {
                            description = parser.getText();
                        } else if (text == 'financing') {
                            financing = parser.getText();
                        } else if (text == 'saleValue') {
                            saleValue = parser.getIntegerValue();
                        } else if (text == 'stillPaying') {
                            stillPaying = parser.getBooleanValue();
                        } else if (text == 'type') {
                            type_Z = parser.getText();
                        } else {
                            System.debug(LoggingLevel.WARN, 'Heritage consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }
    
    public class BuyForAnother {
        public String address {get;set;} 
        public String dob {get;set;} 
        public Integer geographicDataId {get;set;} 
        public Integer identificationTypeId {get;set;} 
        public String identificationValue {get;set;} 
        public String lastName {get;set;} 
        public String maritalRegime {get;set;} 
        public String maritalStatus {get;set;} 
        public String motherLastName {get;set;} 
        public String name {get;set;} 
        public Integer nationalityId {get;set;} 

        public BuyForAnother(JSONParser parser) {
            while (parser.nextToken() != System.JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                        if (text == 'address') {
                            address = parser.getText();
                        } else if (text == 'dob') {
                            dob = parser.getText();
                        } else if (text == 'geographicDataId') {
                            geographicDataId = parser.getIntegerValue();
                        } else if (text == 'identificationTypeId') {
                            identificationTypeId = parser.getIntegerValue();
                        } else if (text == 'identificationValue') {
                            identificationValue = parser.getText();
                        } else if (text == 'lastName') {
                            lastName = parser.getText();
                        } else if (text == 'maritalRegime') {
                            maritalRegime = parser.getText();
                        } else if (text == 'maritalStatus') {
                            maritalStatus = parser.getText();
                        } else if (text == 'motherLastName') {
                            motherLastName = parser.getText();
                        } else if (text == 'name') {
                            name = parser.getText();
                        } else if (text == 'nationalityId') {
                            nationalityId = parser.getIntegerValue();
                        } else {
                            System.debug(LoggingLevel.WARN, 'BuyForAnother consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }
    
    public class BankInformation {
        public String accountNumber {get;set;} 
        public Boolean automaticPayment {get;set;} 
        public Integer codeId {get;set;} 

        public BankInformation(JSONParser parser) {
            while (parser.nextToken() != System.JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                        if (text == 'accountNumber') {
                            accountNumber = parser.getText();
                        } else if (text == 'automaticPayment') {
                            automaticPayment = parser.getBooleanValue();
                        } else if (text == 'codeId') {
                            codeId = parser.getIntegerValue();
                        } else {
                            System.debug(LoggingLevel.WARN, 'BankInformation consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }
    
    public class SpouseData {
        public Integer activityTypeId {get;set;} 
        public String address {get;set;} 
        public Boolean combinedIncome {get;set;} 
        public String employerName {get;set;} 
        public String identificationType {get;set;} 
        public String identificationValue {get;set;} 
        public String lastName {get;set;} 
        public String motherLastName {get;set;} 
        public String name {get;set;} 
        public Integer salary {get;set;} 
        public Integer spouseGeographicDataId {get;set;} 
        public String workPhone {get;set;} 
        public String workType {get;set;} 

        public SpouseData(JSONParser parser) {
            while (parser.nextToken() != System.JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                        if (text == 'activityTypeId') {
                            activityTypeId = parser.getIntegerValue();
                        } else if (text == 'address') {
                            address = parser.getText();
                        } else if (text == 'combinedIncome') {
                            combinedIncome = parser.getBooleanValue();
                        } else if (text == 'employerName') {
                            employerName = parser.getText();
                        } else if (text == 'identificationType') {
                            identificationType = parser.getText();
                        } else if (text == 'identificationValue') {
                            identificationValue = parser.getText();
                        } else if (text == 'lastName') {
                            lastName = parser.getText();
                        } else if (text == 'motherLastName') {
                            motherLastName = parser.getText();
                        } else if (text == 'name') {
                            name = parser.getText();
                        } else if (text == 'salary') {
                            salary = parser.getIntegerValue();
                        } else if (text == 'spouseGeographicDataId') {
                            spouseGeographicDataId = parser.getIntegerValue();
                        } else if (text == 'workPhone') {
                            workPhone = parser.getText();
                        } else if (text == 'workType') {
                            workType = parser.getText();
                        } else {
                            System.debug(LoggingLevel.WARN, 'SpouseData consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }
    
    public List<BankInformation> bankInformation {get;set;} 
    public BuyForAnother buyForAnother {get;set;} 
    public Customer customer {get;set;} 
    public CustomerActivity customerActivity {get;set;} 
    public CustomerRequestData customerRequestData {get;set;} 
    public Expenses expenses {get;set;} 
    public List<Guarantor> guarantor {get;set;} 
    public List<Heritage> heritage {get;set;} 
    public Income income {get;set;} 
    public OtherIncome otherIncome {get;set;} 
    public List<PersonalReferences> personalReferences {get;set;} 
    public Integer simulationId {get;set;} 
    public SpouseData spouseData {get;set;} 
    public Integer stage {get;set;} 
    public List<TaxReturn> taxReturn {get;set;} 

    public AMICAR_simulacionformalizaWSJSON(JSONParser parser) {
        while (parser.nextToken() != System.JSONToken.END_OBJECT) {
            if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                String text = parser.getText();
                if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                    if (text == 'bankInformation') {
                        bankInformation = arrayOfBankInformation(parser);
                    } else if (text == 'buyForAnother') {
                        buyForAnother = new BuyForAnother(parser);
                    } else if (text == 'customer') {
                        customer = new Customer(parser);
                    } else if (text == 'customerActivity') {
                        customerActivity = new CustomerActivity(parser);
                    } else if (text == 'customerRequestData') {
                        customerRequestData = new CustomerRequestData(parser);
                    } else if (text == 'expenses') {
                        expenses = new Expenses(parser);
                    } else if (text == 'guarantor') {
                        guarantor = arrayOfGuarantor(parser);
                    } else if (text == 'heritage') {
                        heritage = arrayOfHeritage(parser);
                    } else if (text == 'income') {
                        income = new Income(parser);
                    } else if (text == 'otherIncome') {
                        otherIncome = new OtherIncome(parser);
                    } else if (text == 'personalReferences') {
                        personalReferences = arrayOfPersonalReferences(parser);
                    } else if (text == 'simulationId') {
                        simulationId = parser.getIntegerValue();
                    } else if (text == 'spouseData') {
                        spouseData = new SpouseData(parser);
                    } else if (text == 'stage') {
                        stage = parser.getIntegerValue();
                    } else if (text == 'taxReturn') {
                        taxReturn = arrayOfTaxReturn(parser);
                    } else {
                        System.debug(LoggingLevel.WARN, 'AMICAR_simulacionformalizaWSJSON consuming unrecognized property: '+text);
                        consumeObject(parser);
                    }
                }
            }
        }
    }
    
    public class CustomerActivity {
        public Integer activityTypeId {get;set;} 
        public Integer businessSectorId {get;set;} 
        public String employerIdentificationType {get;set;} 
        public String employerIdentificationValue {get;set;} 
        public String employerName {get;set;} 
        public String employmentContractType {get;set;} 
        public Integer salaryPayday {get;set;} 
        public String salaryType {get;set;} 
        public String workAddress {get;set;} 
        public String workEntryDate {get;set;} 
        public Integer workGeographicDataId {get;set;} 
        public String workPhone {get;set;} 
        public String workPosition {get;set;} 
        public String workType {get;set;} 

        public CustomerActivity(JSONParser parser) {
            while (parser.nextToken() != System.JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                        if (text == 'activityTypeId') {
                            activityTypeId = parser.getIntegerValue();
                        } else if (text == 'businessSectorId') {
                            businessSectorId = parser.getIntegerValue();
                        } else if (text == 'employerIdentificationType') {
                            employerIdentificationType = parser.getText();
                        } else if (text == 'employerIdentificationValue') {
                            employerIdentificationValue = parser.getText();
                        } else if (text == 'employerName') {
                            employerName = parser.getText();
                        } else if (text == 'employmentContractType') {
                            employmentContractType = parser.getText();
                        } else if (text == 'salaryPayday') {
                            salaryPayday = parser.getIntegerValue();
                        } else if (text == 'salaryType') {
                            salaryType = parser.getText();
                        } else if (text == 'workAddress') {
                            workAddress = parser.getText();
                        } else if (text == 'workEntryDate') {
                            workEntryDate = parser.getText();
                        } else if (text == 'workGeographicDataId') {
                            workGeographicDataId = parser.getIntegerValue();
                        } else if (text == 'workPhone') {
                            workPhone = parser.getText();
                        } else if (text == 'workPosition') {
                            workPosition = parser.getText();
                        } else if (text == 'workType') {
                            workType = parser.getText();
                        } else {
                            System.debug(LoggingLevel.WARN, 'CustomerActivity consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }
    
    public class Guarantor {
        public Integer activityTypeId {get;set;} 
        public String address {get;set;} 
        public String dob {get;set;} 
        public Integer geographicDataId {get;set;} 
        public Integer identificationTypeId {get;set;} 
        public String identificationValue {get;set;} 
        public String lastName {get;set;} 
        public String maritalRegime {get;set;} 
        public String maritalStatus {get;set;} 
        public String motherLastName {get;set;} 
        public String name {get;set;} 
        public Integer nationalityId {get;set;} 
        public Integer salary {get;set;} 
        public String workType {get;set;} 

        public Guarantor(JSONParser parser) {
            while (parser.nextToken() != System.JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                        if (text == 'activityTypeId') {
                            activityTypeId = parser.getIntegerValue();
                        } else if (text == 'address') {
                            address = parser.getText();
                        } else if (text == 'dob') {
                            dob = parser.getText();
                        } else if (text == 'geographicDataId') {
                            geographicDataId = parser.getIntegerValue();
                        } else if (text == 'identificationTypeId') {
                            identificationTypeId = parser.getIntegerValue();
                        } else if (text == 'identificationValue') {
                            identificationValue = parser.getText();
                        } else if (text == 'lastName') {
                            lastName = parser.getText();
                        } else if (text == 'maritalRegime') {
                            maritalRegime = parser.getText();
                        } else if (text == 'maritalStatus') {
                            maritalStatus = parser.getText();
                        } else if (text == 'motherLastName') {
                            motherLastName = parser.getText();
                        } else if (text == 'name') {
                            name = parser.getText();
                        } else if (text == 'nationalityId') {
                            nationalityId = parser.getIntegerValue();
                        } else if (text == 'salary') {
                            salary = parser.getIntegerValue();
                        } else if (text == 'workType') {
                            workType = parser.getText();
                        } else {
                            System.debug(LoggingLevel.WARN, 'Guarantor consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }
    
    public class TaxReturn {
//        public String date {get;set;} 
        public Integer purchaseTax {get;set;} 
        public Integer salesTax {get;set;} 

        public TaxReturn(JSONParser parser) {
            while (parser.nextToken() != System.JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                        if (text == 'date') {
                            //date = parser.getText();
                        } else if (text == 'purchaseTax') {
                            purchaseTax = parser.getIntegerValue();
                        } else if (text == 'salesTax') {
                            salesTax = parser.getIntegerValue();
                        } else {
                            System.debug(LoggingLevel.WARN, 'TaxReturn consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }
    
    
    public static AMICAR_simulacionformalizaWSJSON parse(String json) {
        System.JSONParser parser = System.JSON.createParser(json);
        return new AMICAR_simulacionformalizaWSJSON(parser);
    }
    
    public static void consumeObject(System.JSONParser parser) {
        Integer depth = 0;
        do {
            System.JSONToken curr = parser.getCurrentToken();
            if (curr == System.JSONToken.START_OBJECT || 
                curr == System.JSONToken.START_ARRAY) {
                depth++;
            } else if (curr == System.JSONToken.END_OBJECT ||
                curr == System.JSONToken.END_ARRAY) {
                depth--;
            }
        } while (depth > 0 && parser.nextToken() != null);
    }
    

    private static List<Guarantor> arrayOfGuarantor(System.JSONParser p) {
        List<Guarantor> res = new List<Guarantor>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Guarantor(p));
        }
        return res;
    }




    private static List<PersonalReferences> arrayOfPersonalReferences(System.JSONParser p) {
        List<PersonalReferences> res = new List<PersonalReferences>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new PersonalReferences(p));
        }
        return res;
    }





    private static List<TaxReturn> arrayOfTaxReturn(System.JSONParser p) {
        List<TaxReturn> res = new List<TaxReturn>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new TaxReturn(p));
        }
        return res;
    }


    private static List<BankInformation> arrayOfBankInformation(System.JSONParser p) {
        List<BankInformation> res = new List<BankInformation>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new BankInformation(p));
        }
        return res;
    }


    private static List<Heritage> arrayOfHeritage(System.JSONParser p) {
        List<Heritage> res = new List<Heritage>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Heritage(p));
        }
        return res;
    }













}